#!/usr/bin/env python

# for proper daemonization, see 
# https://github.com/seb-m/pyinotify/blob/master/python2/examples/daemon.py

# built from https://github.com/seb-m/pyinotify/wiki/List-of-Examples

import pyinotify
import re

class Handler(pyinotify.ProcessEvent):

    def process_IN_CLOSE_WRITE(self, event):
        """Called after creation and update finish."""
        if numberfile(event.pathname):
            print "Close write:", event.pathname
        
    def process_IN_DELETE(self, event):
        if numberfile(event.pathname):
            print "Removing:", event.pathname


def numberfile(path):
    return re.match(r".*/[1-8]$", path)

handler = Handler()

wm = pyinotify.WatchManager()
mask = pyinotify.IN_CLOSE_WRITE | pyinotify.IN_DELETE
wm.add_watch('/var/run/blink8/', mask, rec = True)

notifier = pyinotify.Notifier(wm, handler, read_freq=1)
notifier.coalesce_events()

notifier.loop()
